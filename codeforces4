#include<bits/stdc++.h>
using namespace std;
 
#define trace(x) {cerr << #x << "=" << x <<endl;}
#define trace2(x, y) {cerr << #x << "=" << x << " " << #y << "=" << y <<endl;}
template <typename T> ostream& operator<<(ostream& os, const vector<T> &p){os << "[ "; for (T x: p) os << x << " "; os << "]" << endl; return os;}
template <typename T> ostream& operator<<(ostream& os, const set<T> &p){os << "{ "; for (T x: p) os << x << " "; os << "}" << endl; return os;}
template <typename Tk, typename Tv> ostream& operator<<(ostream& os, const map<Tk, Tv> &p){os << "{ "; for (pair<Tk, Tv> x: p) os << x << " "; os << "}" << endl; return os;}
template <typename Tk, typename Tv> ostream& operator<<(ostream& os, const pair<Tk, Tv> &p){os << "{" << p.first << ',' << p.second << "}";return os;}
 
typedef long long ll;
 
int n;
const int MAX=1e6+7;
bool visited[MAX];
int comp,sz;
vector<int>adj[MAX];
int p[MAX];
int ans;
 
void dfs(int i)
{
visited[i]=true;
for(auto j:adj[i])
if(!visited[j])
dfs(j);
}
 
void func()
{
for(int i=1;i<=n;i++)
if(!visited[i])
{
dfs(i);
comp++;
}
 
}
 
int main()
{
ios_base::sync_with_stdio(false);
//freopen("in.txt","r",stdin);
cin>>n;
for(int i=1;i<=n;i++)
{
cin>>p[i];
adj[p[i]].push_back(i);
adj[i].push_back(p[i]);
}
func();
int one=0;
for(int i=1;i<=n;i++)
{
int x;
cin>>x;
one+=x==1;
}
if(comp==1)
comp=0;
int ans=comp;
ans+=(one%2==0);
cout<<ans<<endl;
return 0;
}
