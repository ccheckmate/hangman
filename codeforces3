#include<bits/stdc++.h>
using namespace std;
 
#define trace(x) {cerr << #x << "=" << x <<endl;}
#define trace2(x, y) {cerr << #x << "=" << x << " " << #y << "=" << y <<endl;}
template <typename T> ostream& operator<<(ostream& os, const vector<T> &p){os << "[ "; for (T x: p) os << x << " "; os << "]" << endl; return os;}
template <typename T> ostream& operator<<(ostream& os, const set<T> &p){os << "{ "; for (T x: p) os << x << " "; os << "}" << endl; return os;}
template <typename Tk, typename Tv> ostream& operator<<(ostream& os, const map<Tk, Tv> &p){os << "{ "; for (pair<Tk, Tv> x: p) os << x << " "; os << "}" << endl; return os;}
template <typename Tk, typename Tv> ostream& operator<<(ostream& os, const pair<Tk, Tv> &p){os << "{" << p.first << ',' << p.second << "}";return os;}
 
typedef long long ll;
long long m,n,k;
 
long long func()
{
m-=n;
int height=1;
int left=k-1,right=n-k;
int two=min(left,right);
int one=max(left,right)-min(left,right);
int incr=1;
for(int i=0;i<two;i++)
{
if(incr>m)
break;
height++;
m-=incr;
incr+=2;
}
for(int i=0;i<one;i++)
{
if (incr>m)
break;
height++;
m-=incr;
incr+=1;
}
height+=m/n;
return height;
}
 
int main()
{
ios_base::sync_with_stdio(false);
//freopen("in.txt","r",stdin);
cin >>n>>m>> k;
cout<<func()<<endl;
return 0;
}
